# minicut --- MINImalist C Unit Test
# Copyright (C) 2022  Xiaoyue Chen

# This file is part of minicut.

# minicut is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# minicut is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with minicut.  If not, see <http://www.gnu.org/licenses/>.

* minicut
  MINImalist C Unit Test
** Features
   - Header-only
   - Test discovery
   - Minimal code base
   - Minimal dependencies
   - Written in C, supports C++
   - Supports GCC and Clang
   - Modular and customisable
** Getting started
   Clone the repository, then take a look at ~example-mini.c~
   #+begin_src c
     #include "minicut-main.h"

     MC_test (test_a)
     {
       MC_assert (1);
       MC_assert (3 == 3);
     }

     MC_test (test_b)
     {
       MC_assert (0);
       MC_assert (1 == 3);
     }
   #+end_src

   You only need to know 3 things to get started
   - Including ~minicut-main.h~ registers tests and provides a ~main~
   - ~MC_test(NAME)~ declares a test case with NAME
   - ~MC_assert(EXP)~ asserts an EXPression

   Build ~example-mini~ by running ~make~. Executing ~./example-mini~
   gives the following output
   #+begin_src shell :results output :exports results
     ./example-mini 2>&1 | cat
   #+end_src

   #+RESULTS:
   : minicut is testing ./example-mini
   : test_a PASS
   : test_b FAIL
   : example-mini.c:31: error: assertion failed: 0
   : example-mini.c:32: error: assertion failed: 1 == 3
   : TOTAL 2 PASS 1 FAIL 1

   Now you have understood the basic usage of minicut. Simply include
   ~minicut-main.h~ and you are ready to unit test (~minicut-mini.h~
   must also be in your include path).

   The rest of the sections are for those who would like to customise
   or hack minicut.

** TODO How minicut works

** TODO Hacking minicut

** TODO Contributing
